#################_queues_implementation_using_array_##############################################

#class queues_using_arr:
#    def __init__(self):
#        self.__arr=[]
#        self.__count=0
#        self.__front=0
#    def enqueue(self,data):
#        self.__arr.append(data)
#        self.__count+=1
#    def dequeue(self):
#        if self.__count==0:
#            return -1
#        ele=self.__arr[self.__front]
#        self.__front+=1
#        self.__count-=1
#        return ele
#    def front(self):
#        if self.__count==0:
#            return -1
#        return self.__arr[self.__front]
#    def size(self):
#        return self.__count
#    def is_empty(self):
#        return self.__count==0
#
#q1=queues_using_arr()
#q1.enqueue(3)
#q1.enqueue(5)
#q1.enqueue(7)
#q1.enqueue(11)
#q1.enqueue(15)
#print("size=",q1.size())
#while q1.is_empty() == False:
#    print(q1.front())
#    q1.dequeue()
#print(q1.dequeue())
