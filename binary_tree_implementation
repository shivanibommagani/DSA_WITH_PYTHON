#class BinaryTreeNode:
#    def __init__(self,data):
#        self.data = data
#        self.left = None
#        self.right = None
#
#
#def taking_input():
#    root_data = int(input())
#    if root_data==-1:
#        return None
#    root = BinaryTreeNode(root_data)
#    left_child = taking_input()
#    right_child = taking_input()
#    root.left = left_child
#    root.right = right_child
#    return root
#
#def print_tree(root):
#    if root == None:
#        return
#    print(root.data,end=":")
#    if root.left != None:
#        print("L",root.left.data,end=",")
#    if root.right != None:
#        print("R",root.right.data)
#    print()
#    print_tree(root.left)
#    print_tree(root.right)
#
#
#def No_of_Nodes(root):
#    if root == None:
#        return 0
#    l_count=No_of_Nodes(root.left)
#    r_count=No_of_Nodes(root.right)
#    return l_count+r_count+1
#k = taking_input()
#print_tree(k)
#print(No_of_Nodes(k))
