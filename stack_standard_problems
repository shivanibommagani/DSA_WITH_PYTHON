
#############Nearest Smaller to left###############################################

#def nearest_smaller_to_left(arr):
#    s=[]
#    v=[]
#    for i in range(0,len(arr)):
#        if len(s)==0:
#            v.append(-1)
#        elif len(s)>0 and s[-1]>arr[i]:
#            v.append(s[-1])
#        elif len(s)>0 and s[-1]<=arr[i]:
#            while len(s)>0 and s[-1]<=arr[i]:
#                s.pop()
#            if len(s)==0:
#                v.append(-1)
#            else:
#                v.append(s[-1])
#        s.append(arr[i])
#    return v



###############Nearest Greater to left ##############################
#def nearest_greater_toleft(arr):
#    s=[]
#    v=[]
#    for i in range(0,len(arr)):
#        if len(s)==0:
#            v.append(-1)
#        elif len(s)>0 and s[-1]>arr[i]:
#            v.append(s[-1])
#        elif len(s)>0 and s[-1]<=arr[i]:
#            while len(s)>0 and s[-1]<=arr[i]:
#                s.pop()
#            if len(s)==0:
#                v.append(-1)
#            else:
#                v.append(s[-1])
#        s.append(arr[i])
#    return v


##########################Nearest greater to right  ###########################

#def nearest_greater_toright(arr):
#    s=[]
#    v=[]
#    for i in range(len(arr)-1,-1,-1):
#        if len(s)==0:
#            v.append(-1)
#        elif len(s)>0 and s[-1]>arr[i]:
#            v.append(s[-1])
#        elif len(s)>0 and s[-1]<=arr[i]:
#            while len(s)>0 and s[-1]<=arr[i]:
#                s.pop()
#            if len(s)==0:
#                v.append(-1)
#            else:
#                v.append(s[-1])
#        s.append(arr[i])
#    return v[::-1]

######################### Nearest smaller to right#############################


#def nearest_smaller_toright(arr):
#    s=[]
#    v=[]
#    for i in range(len(arr)-1,-1,-1):
#        if len(s)==0:
#            v.append(-1)
#        elif len(s)>0 and s[-1]<arr[i]:
#            v.append(s[-1])
#        elif len(s)>0 and s[-1]>=arr[i]:
#            while len(s)>0 and s[-1]>=arr[i]:
#                s.pop()
#            if len(s)==0:
#                v.append(-1)
#            else:
#                v.append(s[-1])
#        s.append(arr[i])
#    return v[::-1]


########################Stock_span#############################


#def stock_span(arr):
#   s=[]
#    v=[]
#    for i in range(0,len(arr)):
#        stk_span=1
#        if len(s)>0 and s[-1]<arr[i]:
#            j=len(s)-1
#            while j>=0 and s[j]<arr[i]:
#                stk_span=stk_span+1
#                j=j-1
#        s.append(arr[i])
#        v.append(stk_span)
#    return v
#arr=[6,2,8,3]
#print(stock_span(arr))
#####output=[1,1,3,1]
